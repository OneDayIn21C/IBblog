{
  
    
        "post0": {
            "title": "원티드 채용공고 크롤링",
            "content": "from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.remote.webelement import WebElement from selenium.webdriver import ActionChains import time from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC import pandas as pd import openpyxl import string import datetime as dt from bs4 import BeautifulSoup import requests . import pandas as pd import pymysql from sqlalchemy import create_engine import sqlalchemy import sqlite3 # MySQL Connector using pymysql pymysql.install_as_MySQLdb() import MySQLdb . 1. &#44592;&#51316; &#45936;&#51060;&#53552; Url &#48520;&#47084;&#50724;&#44592; . engine = create_engine(&quot;mysql+mysqldb://root:&quot;+&quot;miro0816&quot;+&quot;@localhost/ibdata&quot;, encoding=&#39;utf-8&#39;) conn = engine.connect() db = pymysql.connect(host = &#39;localhost&#39;, port=3306, user=&#39;root&#39;, passwd=&#39;miro0816&#39;, db = &#39;ibdata&#39;, charset = &#39;utf8&#39;) . urls = pd.read_sql_query(&quot;select urls from wanted;&quot;, db)[&#39;urls&#39;] urls . 0 https://www.wanted.co.kr/wd/65134 1 https://www.wanted.co.kr/wd/57687 2 https://www.wanted.co.kr/wd/36652 3 https://www.wanted.co.kr/wd/63362 4 https://www.wanted.co.kr/wd/69476 ... 692 https://www.wanted.co.kr/wd/72018 693 https://www.wanted.co.kr/wd/71613 694 https://www.wanted.co.kr/wd/61586 695 https://www.wanted.co.kr/wd/71826 696 https://www.wanted.co.kr/wd/71700 Name: urls, Length: 697, dtype: object . 2. &#52628;&#44032;&#46108; url &#51452;&#49548; &#47532;&#49828;&#53944; &#53356;&#47204;&#47553; . 2-1. &#39;data&#39; &#53412;&#50892;&#46300;&#47196; &#44160;&#49353;&#54644; JD &#47532;&#49828;&#53944; &#53356;&#47204;&#47553; . def call_url(keyword): chromedriver = &#39;/usr/local/bin/chromedriver&#39; driver = webdriver.Chrome(chromedriver) # 크롤링할 사이트 호출 driver.get(f&quot;https://www.wanted.co.kr/search?query={keyword}&quot;) # 페이지 로딩 대기 time.sleep(1) prev_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;) while True: # 스크롤을 화면 가장 아래로 내린다 driver.execute_script(&quot;window.scrollTo(0,document.body.scrollHeight)&quot;) # 페이지 로딩 대기 time.sleep(1) # 현재 문서 높이를 가져와서 저장 curr_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;) if(curr_height == prev_height): break else: prev_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;) return . call_url(&#39;data&#39;) # 검색 결과 JD의 전체 url 크롤링 elements = driver.find_elements_by_css_selector(&#39;#__next &gt; div &gt; div._325-VFHw4I8HVltNqdJ89t &gt; div:nth-child(3) &gt; div &gt; div &gt; ul &gt; li &gt; div &gt; a&#39;) . address_lst = [] for i in elements: address_lst.append(i.get_attribute(&#39;href&#39;)) print(address_lst[:3]) print(len(address_lst)) . [&#39;https://www.wanted.co.kr/wd/59855&#39;, &#39;https://www.wanted.co.kr/wd/73445&#39;, &#39;https://www.wanted.co.kr/wd/48457&#39;] 189 . 2-2. &#39;&#45936;&#51060;&#53552;&#39; &#53412;&#50892;&#46300;&#47196; &#44160;&#49353;&#54644; JD &#47532;&#49828;&#53944; &#53356;&#47204;&#47553; . call_url(&#39;데이터&#39;) elements2 = driver.find_elements_by_css_selector(&#39;#__next &gt; div &gt; div._325-VFHw4I8HVltNqdJ89t &gt; div:nth-child(3) &gt; div &gt; div &gt; ul &gt; li &gt; div &gt; a&#39;) len(elements2) . 376 . for i in elements2: address_lst.append(i.get_attribute(&#39;href&#39;)) print(address_lst[:3]) print(len(address_lst)) . [&#39;https://www.wanted.co.kr/wd/59855&#39;, &#39;https://www.wanted.co.kr/wd/73445&#39;, &#39;https://www.wanted.co.kr/wd/48457&#39;] 565 . 2-3. &#44592;&#51316; url&#44284; &#51473;&#48373;&#46108; url &#51228;&#44144; . new_urls = list(set(address_lst) - set(urls)) print(&quot;기존 크롤링 url 수 = &quot;,len(urls), &quot;개&quot;), print(&quot;추가된 url 수 = &quot;, len(new_urls), &quot;개&quot;) . 기존 크롤링 url 수 = 697 개 추가된 url 수 = 70 개 . 3. &#44033; url&#51032; JD contents &#53356;&#47204;&#47553; . wanted&#45716; &#46041;&#51201; &#50937;&#54168;&#51060;&#51648;&#51060;&#48064;&#47196; &#54596;&#50836;&#54620; &#45936;&#51060;&#53552;&#47484; &#53356;&#47204;&#47553; &#54616;&#44592; &#50948;&#54644;&#49436;&#45716; . 해당 데이터가 로드 되는 지점까지 스크롤 다운 | | 필요한 데이터를 불러오기까지 대기 | | . # driver = webdriver.Chrome(chromedriver) jd_title = [] jd_box = [] jd_end = [] for i in new_urls: driver.get(i) time.sleep(0.5) height = driver.execute_script(&quot;return document.body.scrollHeight&quot;) # 로딩 후 페이지 높이 기져옴 # JD contents의 마지막 대상인 마감일, 위치 데이터를 크롤링 하기 위해 # 해당 데이터가 위치한 곳까지 스크롤 다운 while True: if driver.find_elements_by_css_selector(&quot;._3XP3DBqOgzsz7P6KrVpbGO&quot;) != []: break curr_position = driver.execute_script(&#39;return window.scrollY&#39;) #현재 스크롤 위치 가져옴 driver.execute_script(f&#39;window.scrollTo({curr_position}, {(curr_position + 1000)})&#39;) # # print(f&#39;현재 스크롤 위치 &gt;&gt; {curr_position}&#39;) time.sleep(0.5) # 타겟 엘리먼트 조회 jd_title.append(driver.find_element_by_css_selector(&quot;.Bfoa2bzuGpxK9ieE1GxhW&quot;).text) jd_box.append(driver.find_element_by_css_selector(&quot;._3_gsSnQyvwrqCAjw47hjWK&quot;).text) jd_end.append(driver.find_element_by_css_selector(&quot;._3XP3DBqOgzsz7P6KrVpbGO&quot;).text) print(&#39;크롤링 완료&#39;) . 크롤링 완료 . df = pd.DataFrame() df[&#39;title&#39;] = jd_title df[&#39;contents&#39;] = jd_box df[&#39;end&#39;] = jd_end df[&#39;url&#39;] = new_urls len(jd_title), len(jd_box), len(jd_end), len(df) . (70, 70, 70, 70) . raw_df = df.copy() print(raw_df.shape) raw_df.head() . (70, 4) . title contents end url . 0 데이터 분석 및 모델링 전문가 (Python) n이글루시큐리티 n응답률 평균 이상 ... | ■ 세계 보안을 지키는 글로벌 정보보안기업 이글루시큐리티 n n이글루시큐리티는 국내... | 마감일2021.08.31 n근무지역서울 송파구 문정동 정의로 8길 7 한스빌딩 ㈜이... | https://www.wanted.co.kr/wd/64788 | . 1 Data Analyst n미소(miso) n응답률 평균 이상 n서울.한국 n#누적투... | Mission n nMiso의 Mission은 ‘우리의 고객에게 행복한 순간을 더 ... | 마감일2021.08.06 n근무지역서초구 서초대로 396 강남빌딩 18층 | https://www.wanted.co.kr/wd/73085 | . 2 Data Engineer n아모레퍼시픽(AMOREPACIFIC) n서울.한국 n#연... | 아모레퍼시픽은 세상을 바꾸는 아름다움을 창조하는 ‘원대한 기업(Great Globa... | 마감일2021.08.19 n근무지역서울특별시 용산구 한강대로 100 | https://www.wanted.co.kr/wd/73445 | . 3 Data Scientist n미소(miso) n응답률 평균 이상 n서울.한국 n#누... | Home Cleaning Team n nMiso의 Mission은 ‘우리의 고객에게... | 마감일2021.08.06 n근무지역서초구 서초대로 396 강남빌딩 18층 | https://www.wanted.co.kr/wd/72683 | . 4 데이터개발자 n로지스랩 n서울.한국 n#인원급성장#50명이하#설립4~9년#간식#IT... | 로지스랩은 물류산업의 디지털 트랜스포메이션을 목표로 화물운송 솔루션 개발 및 서비스... | 마감일2021.08.31 n근무지역서울특별시 강남구 남부순환로 2621 | https://www.wanted.co.kr/wd/72834 | . 4. &#53356;&#47204;&#47553; &#45936;&#51060;&#53552; &#51204;&#52376;&#47532; . def Derive_col(x): # 제목 및 직무명 x[&#39;jd_title&#39;] = [i.split(&#39; n&#39;)[0] for i in x[&#39;title&#39;]] # 회사명 x[&#39;company&#39;]=[i.split(&#39; n&#39;)[1] for i in x[&#39;title&#39;]] # 태그 x[&#39;tag&#39;] = [i.split(&#39; n&#39;)[3] if &#39;#&#39; in i.split(&#39; n&#39;)[3] else i.split(&#39; n&#39;)[4] if i.split(&#39; n&#39;)[4] in i and &#39;#&#39; in i.split(&#39; n&#39;)[4] else &#39;&#39; for i in x[&#39;title&#39;]] # 회사 소개 x[&#39;intro&#39;]=[i.split(&#39; n주요업무&#39;)[0] for i in x[&#39;contents&#39;]] # 주요 업무 x[&#39;task&#39;] = [i.split(&#39;주요업무 n&#39;)[1].split(&#39; n자격요건 n&#39;)[0] for i in x[&#39;contents&#39;]] # 자격 요건 x[&#39;condition&#39;] = [i.split(&#39; n자격요건 n&#39;)[1].split(&#39; n우대사항 n&#39;)[0] if &#39; n우대사항 n&#39; in i else i.split(&#39; n자격요건 n&#39;)[1].split(&#39; 혜택 및 복지 n&#39;)[0] for i in x[&#39;contents&#39;]] # 우대 사항 x[&#39;prefer&#39;] = [i.split(&#39; n우대사항 n&#39;)[1].split(&#39; n혜택 및 복지 n&#39;)[0] if &#39; n우대사항 n&#39; in i else &#39;&#39; for i in x[&#39;contents&#39;]] # 복지 혜택 x[&#39;welfare&#39;]=[i.split(&#39; n혜택 및 복지 n&#39;)[1] for i in x[&#39;contents&#39;]] # 모집 마감일 x[&#39;end_date&#39;] = [i.split(&#39; n&#39;)[0].split(&#39;마감일&#39;)[1] for i in x[&#39;end&#39;]] # 회사 위치 x[&#39;place&#39;] = [i.split(&#39;근무지역&#39;)[1] if &#39;근무지역&#39; in i else &#39;&#39; for i in x[&#39;end&#39;]] # 컬럼 순서 변경 x = x[[&#39;jd_title&#39;, &#39;company&#39;,&#39;tag&#39;, &#39;intro&#39;, &#39;task&#39;, &#39;condition&#39;, &#39;welfare&#39;, &#39;prefer&#39;, &#39;end_date&#39;, &#39;place&#39;, &#39;url&#39;]] return(x) . wanted = Derive_col(raw_df) print(wanted.shape) wanted.head(2) . (70, 11) . jd_title company tag intro task condition welfare prefer end_date place url . 0 데이터 분석 및 모델링 전문가 (Python) | 이글루시큐리티 | #연봉업계평균이상#인원급성장#퇴사율 6~10%#301~1,000명#설립10년이상#유... | ■ 세계 보안을 지키는 글로벌 정보보안기업 이글루시큐리티 n n이글루시큐리티는 국내... | • 정보보안 관련 빅데이터 처리 n• 데이터 분석을 위한 실험설계, 가설 검증 등 ... | • 학력 : 대졸 이상 (전공무관) n• 경력 : 유관경력 3년 이상 n• SQL,... | • 임직원 건강관리 지원제도 n - 임직원 단체보험 가입 (보장성, 일반형) n ... | • 컴퓨터공학, 통계학 관련 전공 우대 (석/박사 우대) n• 데이터 및 인공지능 ... | 2021.08.31 | 서울 송파구 문정동 정의로 8길 7 한스빌딩 ㈜이글루시큐리티 | https://www.wanted.co.kr/wd/64788 | . 1 Data Analyst | 미소(miso) | #누적투자100억이상#인원급성장#51~300명#설립4~9년#유연근무#조식제공#커피#... | Mission n nMiso의 Mission은 ‘우리의 고객에게 행복한 순간을 더 ... | [미소에서 하게 될 업무는요] n n• Data Analysis: 데이터 가공, A... | [자격요건] n n• 유관 직종 2년 이상의 실무 경력 n• Quantitative... | [보상 및 혜택] n n• 정직원 Stock Option 보상 n• 홈클리닝 서비스... | [이런 분을 우대합니다] n n• 프로젝트별 우선순위 설정, 효율적인 리소스 분배를... | 2021.08.06 | 서초구 서초대로 396 강남빌딩 18층 | https://www.wanted.co.kr/wd/73085 | . wanted[wanted[&#39;company&#39;].str.contains(&#39;매스프레소&#39;)] . jd_title company tag intro task condition welfare prefer end_date place url . 2 Data Analyst | 매스프레소(Mathpresso) | #연봉상위11~20%#누적투자100억이상#인원급성장#51~300명#설립4~9년#유연... | 매스프레소는 문제 검색, 질문답변, 맞춤형 개념학습 콘텐츠를 제공하는 교육 플랫폼 ... | • 서비스 지표 상승 및 문제 해결을 위한 데이터 기반의 인사이트 제공 n• 데이터... | • 단순한 아이디어 차원이 아닌 실질적인 action을 위한 구체적인 인사이트를 n... | • 코어타임 11시-5시를 기준으로 한 자유로운 출퇴근, 유연근무제 운영 n• 눈치... | • Growth팀(Growth Hacking) 또는 Lean Startup에 대한 ... | 상시 | 강남구 선릉로 428, 17층 | https://www.wanted.co.kr/wd/30355 | . 59 Data Engineer | 매스프레소(Mathpresso) | #연봉상위11~20%#누적투자100억이상#인원급성장#51~300명#설립4~9년#유연... | 매스프레소는 문제 검색, 질문답변, 맞춤형 개념학습 콘텐츠를 제공하는 교육 플랫폼 ... | • 빠르게 늘어나고 있는 매스프레소의 데이터 규모에 맞추어 확장가능한 데이터 인프라... | • 대용량 데이터 처리 시스템 구축과 관련된 경력 1년 이상 n• 파이프라인 및 분... | • 코어타임 11시-5시를 기준으로 한 자유로운 출퇴근, 유연근무제 운영 n• 눈치... | • 다양한 상황에서 최적의 솔루션을 찾을 수 있는 문제해결능력 및 원활한 커뮤니케이... | 상시 | 강남구 선릉로 428, 17층 | https://www.wanted.co.kr/wd/52536 | . 5. &#45936;&#51060;&#53552; DB&#50640; &#52628;&#44032; . cols = [&#39;직무&#39;, &#39;회사&#39;, &#39;태그&#39;, &#39;회사소개&#39;, &#39;주요업무&#39;, &#39;자격요건&#39;, &#39;우대사항&#39;, &#39;복지_기타&#39;, &#39;마감일&#39;, &#39;위치&#39;, &#39;urls&#39;] . wanted.columns = cols wanted.iloc[:1] . 직무 회사 태그 회사소개 주요업무 자격요건 우대사항 복지_기타 마감일 위치 urls . 0 데이터 분석 및 모델링 전문가 (Python) | 이글루시큐리티 | #연봉업계평균이상#인원급성장#퇴사율 6~10%#301~1,000명#설립10년이상#유... | ■ 세계 보안을 지키는 글로벌 정보보안기업 이글루시큐리티 n n이글루시큐리티는 국내... | • 정보보안 관련 빅데이터 처리 n• 데이터 분석을 위한 실험설계, 가설 검증 등 ... | • 학력 : 대졸 이상 (전공무관) n• 경력 : 유관경력 3년 이상 n• SQL,... | • 임직원 건강관리 지원제도 n - 임직원 단체보험 가입 (보장성, 일반형) n ... | • 컴퓨터공학, 통계학 관련 전공 우대 (석/박사 우대) n• 데이터 및 인공지능 ... | 2021.08.31 | 서울 송파구 문정동 정의로 8길 7 한스빌딩 ㈜이글루시큐리티 | https://www.wanted.co.kr/wd/64788 | . dtypesql = {&#39;직무&#39;:sqlalchemy.types.VARCHAR(10), &#39;회사&#39;:sqlalchemy.types.VARCHAR(10), &#39;태그&#39;:sqlalchemy.TEXT, &#39;회사소개&#39;:sqlalchemy.TEXT, &#39;주요업무&#39;:sqlalchemy.TEXT, &#39;자격요건&#39;:sqlalchemy.TEXT, &#39;우대사항&#39;:sqlalchemy.TEXT, &#39;복지_기타&#39;:sqlalchemy.TEXT, &#39;마감일&#39;:sqlalchemy.TEXT, &#39;위치&#39;:sqlalchemy.TEXT, &#39;urls&#39;:sqlalchemy.TEXT } . wanted.to_sql(name=&#39;wanted&#39;, con=engine, if_exists=&#39;append&#39;, index = False, dtype = dtypesql) . wanted = pd.read_sql_query(&quot;select * from wanted;&quot;, con = engine) wanted . 직무 회사 태그 회사소개 주요업무 자격요건 우대사항 복지_기타 마감일 위치 urls . 764 Data Engineer (전문연구요원) | 오비이랩(Obelab) | #인원급성장#퇴사율5%이하#50명이하#설립4~9년#스타트업#식비#건강검진#전문연구요... | OBELAB is an integrated solution company speci... | • fNIRS 데이터 분석을 고도화 시키기 위한 선행 분석 알고리즘 개발 n• Di... | • 석/박사 병역특례(전문연구요원) 현역에 한해 지원 가능 n• 전기전자, 의용공학... | • 자율출근제 시행(08:00~10:30 출근) n• 매월 마지막주 금요일 4시 퇴... | • MS Office 사용 능숙자 (Powerpoint, Excel, Word 등)... | 상시 | 서울특별시 강남구 테헤란로312 비전타워 12층 | https://www.wanted.co.kr/wd/72453 | . 765 [Graphic AI] Computer Graphics Research &amp; Engi... | 한국공간데이터 | #스타트업#시리얼#맥주#커피#재택근무#건강검진#교육비#인공지능#IT, 컨텐츠 | 저희 한국공간데이터는 청소/수리/비품 관리 등 프리미엄 공간 관리 서비스를 제공하는... | 자사 플랫폼 서비스를 제공하는 파트너사의 공간을 3D 환경에 적용 및 데이터 분석 ... | • Computer Graphics 관련 지식 보유자. n• 관련 분야 석/박사 학... | - 업무형 최신 장비 및 듀얼모니터 제공 n- 주 40시간 탄력근무제 (~ 오전 1... | • Reinforcement Learning 연구 개발 경험. n• 간단한 Mate... | 상시 | 서울특별시 강남구 삼성동 157-33 패스트파이브 12층 | https://www.wanted.co.kr/wd/45608 | . 766 데이터베이스 관리자(DBA) | 코코네 | #연봉업계평균이상#인원급성장#51~300명#설립4~9년#커피#샐러드#과일#사내식당#... | 코코네는 감성이 표현가능한 디지털 어패럴 서비스를 제공하는 글로벌 기업입니다. n ... | • 데이터베이스 모델링 및 Stored Procedure 개발 n• DBMS 운영 ... | • 게임, 상용서비스의 데이터베이스 개발 및 운영 경력 3년 이상 n• MySQL,... | • 근무시간 n 09:30 ～ 18:30 (점심시간 13:00~14:00) n... | • MongoDB 구축 운영 경험 n• 데이터 ETL 및 DW 구축 경험 n• Re... | 상시 | 강남구 학동로9길 19 | https://www.wanted.co.kr/wd/3737 | . wanted[wanted[&#39;마감일&#39;]&gt; &#39;2021.08.08&#39;].sort_values(by = &#39;마감일&#39;, ascending=True).drop_duplicates().head(10) . 직무 회사 태그 회사소개 주요업무 자격요건 우대사항 복지_기타 마감일 위치 urls . 77 4차 산업 기반(블록체인, AI, Bigdata, IoT 등) 관급 프로젝트 개발 PM | 시티랩스 | #연봉업계평균이상#인원급성장#51~300명#설립10년이상#석식제공#헬스장#재택근무#... | (주)시티랩스는 지능형교통시스템 전문업체로 지난 1996년에 설립되었습니다. 그 동... | • 4차 산업 기반(블록체인, AI, Bigdata, IoT 등) 관급 사업 및 과... | • 대형 개발 프로젝트 PM 또는 PL 경험 n n• 개발에 대한 이해도가 있어 ... | • 매주 수요일 재택 근무 n• 함께 성장 할 수 있도록 Stock Option을 ... | • 해외 개발팀과 의사소통 가능하신 분 | 2021.08.13 | 역삼동 | https://www.wanted.co.kr/wd/62374 | . 729 데이터분석 | 중앙일보 | #연봉상위1%#인원급성장#퇴사율 6~10%#301~1,000명#설립10년이상#의료비... | 중앙일보의 유저 데이터를 분석하고 사업의 방향을 함께 설정할 데이터분석 전문가를 모... | • 이용자 행동 데이터 분석 n• 비즈니스 지표 기획 | • 데이터 모델링 설계 및 구축 경험 n• 콘텐트, 이용자, 서비스 등 각 관점에서... | • 의료비 보장보험 및 종합검진비용 지원 n• 그룹사(중앙일보/JTBC/메가박스/휘... | • R, Python 등 데이터 수집 / 분석 툴 사용 경험 우대 n• 머신러닝 기... | 2021.08.14 | 서울특별시 마포구 상암산로 48-6 중앙일보 빌딩 | https://www.wanted.co.kr/wd/63272 | . 763 빅데이터 연구원(Data Researcher) | 아이겐코리아 | #연봉상위11~20%#인원급성장#50명이하#설립3년이하#커피#건강검진#인공지능#통신... | [아이겐코리아는 어떤 곳인가요?] n nMonetize data you need! ... | [이런 업무를 담당합니다] n n• Machine Learning/Deep Lear... | [이런 분을 찾습니다] n n• 고객 데이터 분석(온라인 커머스를 포함한 B2C 업... | • 압구정역에서 도보 10분 - 접근성 용이한 압구정에 사무실 위치 n n• 러시... | [이런 분을 우대합니다] n n• 수학/통계/컴퓨터공학/산업공학/경영학 등 데이터 ... | 2021.08.14 | 서울시 강남구 신사동 571번지 정인빌딩 | https://www.wanted.co.kr/wd/48256 | . 699 Data Engineer | 아모레퍼시픽(AMOREPACIFIC) | #연봉상위1%#퇴사율5%이하#1,001~10,000명#설립10년이상#제조 | 아모레퍼시픽은 세상을 바꾸는 아름다움을 창조하는 ‘원대한 기업(Great Globa... | ▶ 빅데이터 파이프라인 구축 및 데이터 처리 ( AWS Cloud ) n- 배치 데... | ▶ 경력년수 : 유관 경력 총 1년 이상 n▶ 필수 조건 n- 빅데이터 파이프라인 ... | - 주 5일 근무, 주 40시간 (일 8시간, 점심시간 1시간 제외) n- 카페테리... | ▶ 우대 조건 n- 클라우드 환경 데이터 인프라환경에서의 데이터데이터 파이프라인 개... | 2021.08.19 | 서울특별시 용산구 한강대로 100 | https://www.wanted.co.kr/wd/73445 | . 742 데이터 엔지니어 | 지에스리테일(GS리테일) | #연봉업계평균이상#퇴사율5%이하#1,001~10,000명#설립10년이상#판매, 유통 | 클라우드(AWS) 기반 데이터 수집/분석 플랫폼 운영 및 개발 | • 클라우드 기반의 데이터 플랫폼 아키텍처 설계, 기능 개발 및 운영 n• 배치/실... | • 3년 이상의 관련 경력을 보유하신 분 n• 대용량 데이터 분산처리 기술에 대한 ... | • GS리테일 입사시 사내 복리후생 n• 4대보험 | • AWS 클라우드 기반의 데이터 엔지니어링 경험이 있는 분 n• Hadoop 기반... | 2021.08.20 | 서울시 강남구 논현로 508(역삼동 679번지 GS타워) | https://www.wanted.co.kr/wd/73387 | . 557 데이터 분석 Senior | 펑타이코리아(PENGTAI) | #연봉상위11~20%#인원성장#퇴사율5%이하#301~1,000명#설립4~9년#커피#... | 평균연령 32.5세의 젊고 유쾌한 조직문화를 가진 펑타이의 사업확대에 따른 추가 채... | • 이스토어 캠페인 효과 분석 n• 제품 페이지 콘텐츠 분석, 이동경로 분석 n• ... | • Google Analytics 혹은 Adobe Analytics 활용 능력 중급... | ■ 혜택 및 복지 n-편리한 출퇴근 (강남역 3번출구 앞) n-자율적 업무환경 및 ... | • SQL/R/Python/SPSS 활용 경험 우대 n• 브랜드 자사몰 운영 경험 ... | 2021.08.22 | 서울 강남구 강남대로 372 화인타워 16층 | https://www.wanted.co.kr/wd/71596 | . 759 프론트엔드 개발자 (데이터팀) | 오픈서베이 | #연봉상위11~20%#인원급성장#51~300명#설립10년이상#리프레시휴가#반려동물#... | 【 오픈서베이 소개 】 n고객 경험의 시대, 오픈서베이는 기술로 설문조사의 가치를 ... | • 설문응답 결과 표현과 분석도구 개발 전반 : Openanalytics (http... | • HTML, CSS, Javascript, SPA 프레임워크 기반 개발 및 서비스... | 【복지】 nRefresh n• 180만원의 복지포인트 : 운동, 여행, 자기계발에 ... | • 서비스를 초기 설계부터 런칭하고 운영까지 참여해본 경험 n• 데이터 시각화 경험... | 2021.08.27 | 서울 서초구 서초대로 78길 5 대각빌딩 10층 | https://www.wanted.co.kr/wd/72438 | . 78 데이터 사이언티스트 / 머신러닝&amp;딥러닝 엔지니어 | 파이온코퍼레이션(PionCorporation) | #음료#커피#건강검진#인공지능#통신비#IT, 컨텐츠 | 24th Kaggle Rank를 달성했던 경험과 실리콘밸리에서 성공적 경험을 가진 ... | • Computer Vision/영상 데이터 분석 및 모델링 - 이미지내 Text ... | • ML 기본 알고리즘 사용및 작동 방식의 이해: regression, decisi... | • 각종 경조사비 n• 생일 상품권 n• 매년 건강검진 지원 (지정된 업체에서 진행... | • 실데이터 분석 및 모델링 경험자 n• 온라인 광고, AdTech 유경험자 n• ... | 2021.08.28 | 서울시 강남구 삼성로 85길 26, V&amp;S 601호 | https://www.wanted.co.kr/wd/63936 | . 708 데이터 엔지니어 | 펑타이코리아(PENGTAI) | #연봉상위11~20%#퇴사율5%이하#301~1,000명#설립4~9년#커피#간식#대출... | 평균연령 32.5세의 젊고 유쾌한 조직문화를 가진 펑타이의 사업확대에 따른 추가 채... | • 웹 기반 애드테크 솔루션 개발(현행 테크 스택 - python / golang ... | • 프로그래밍이 가능한 자 (github, bitbucket 계정 또는 소스코드 포... | ■ 혜택 및 복지 n-편리한 출퇴근 (강남역 3번출구 앞) n-자율적 업무환경 및 ... | • 개인 프로젝트, 오픈소스 프로젝트 경험자 우대 n• 스타트업 경력 우대 n• 데... | 2021.08.28 | 서울 강남구 강남대로 372 화인타워 16층 | https://www.wanted.co.kr/wd/73054 | . 735 데이터개발 | 중앙일보 | #연봉상위1%#인원급성장#퇴사율 6~10%#301~1,000명#설립10년이상#의료비... | 중앙일보 뉴스서비스실은 중앙그룹의 디지털 뉴스를 세상에 전달하기 위한 n백엔드 플랫... | • 데이터 시스템 개발 및 유지보수 n• ElasticSearch 검색 시스템 개발... | • Hadoop-Ecosystem 및 MongoDB 기반 개발/운영 경험 n• El... | • 의료비 보장보험 및 종합검진비용 지원 n• 그룹사(중앙일보/JTBC/메가박스/휘... | • GA360, Tag Manager, BigQuery, Data Studio 경험... | 2021.08.30 | 서울특별시 마포구 상암산로 48-6 중앙일보 빌딩 | https://www.wanted.co.kr/wd/63277 | .",
            "url": "https://onedayin21c.github.io/IBblog/jupyter/mysql/pandas/selenium/2021/08/16/21-08-03-%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%B1%84%EC%9A%A9%EA%B3%B5%EA%B3%A0-%ED%81%AC%EB%A1%A4%EB%A7%81-with-Selenium,-sqlalchemy,-mysql,-pandas.html",
            "relUrl": "/jupyter/mysql/pandas/selenium/2021/08/16/21-08-03-%EC%9B%90%ED%8B%B0%EB%93%9C-%EC%B1%84%EC%9A%A9%EA%B3%B5%EA%B3%A0-%ED%81%AC%EB%A1%A4%EB%A7%81-with-Selenium,-sqlalchemy,-mysql,-pandas.html",
            "date": " • Aug 16, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "앱스토어 리뷰 텍스트 워드클라우드",
            "content": "import pandas as pd from google.cloud import bigquery . 1. BigQuery &#45936;&#51060;&#53552; &#47196;&#46300; . cd = service_account.Credentials.from_service_account_file( &#39;/Users/choeinbeom/Downloads/tidal-surf-302413-582aad3f1e46.json&#39;) client = bigquery.Client (project = &#39;tidal-surf-302413&#39; , credentials = cd) # 쿼리문 작성 query = &quot;&quot;&quot; SELECT app, title, comment, stars FROM appstore.reviews WHERE app = &#39;프렌트립&#39; &quot;&quot;&quot; df_result = client.query(query).to_dataframe() # EDA print(df_result.shape) print(df_result.dtypes) df_result.head() . (393, 4) app object title object comment object stars int64 dtype: object . app title comment stars . 0 프렌트립 | 왜 제가 선택한적도 없는 사진이 프로필 사진으로 바껴있는거죠 | 까먹은것도 아니도 저는 절대 그 사진으로 프로필 사진 수정할 리가 없어요 얼굴 올라... | 1 | . 1 프렌트립 | 액티비티는 좋은데 어플이 너무 느려요. | 푸시앱 타서 들어가면 하루 종일 걸리고 너무 버벅거려요. n그리고 가끔 오픈되지 않... | 1 | . 2 프렌트립 | 호스트는 하지 마세요. | 일회성이벤트나 체험판 수업 정도에는 어울리지만 그 이상 정기적인 클래스를 감당할 수... | 1 | . 3 프렌트립 | 개쓰레기같은 앱임 | 수업 신청해서 2시간걸리는 곳까지 땀 찔찔 흘려가며 갔는데 위치를 못찾겠어서 전화했... | 1 | . 4 프렌트립 | 별루 | 보기에 좋아보여서 가입했는데 막상 들어가서 살펴보니까 별로라서 탈퇴하고 삭제할려했더... | 1 | . 2. &#51204;&#52376;&#47532; . 리뷰 제목과 코멘트를 함께 분석하고자 하나의 컬럼으로 통합 . df_result[&#39;comment&#39;] = [title + comment for title, comment in df_result[[&#39;title&#39;, &#39;comment&#39;]].values] frip = df_result.copy() frip[&#39;comment&#39;][:5] . 0 왜 제가 선택한적도 없는 사진이 프로필 사진으로 바껴있는거죠까먹은것도 아니도 저는 ... 1 액티비티는 좋은데 어플이 너무 느려요.푸시앱 타서 들어가면 하루 종일 걸리고 너무 ... 2 호스트는 하지 마세요.일회성이벤트나 체험판 수업 정도에는 어울리지만 그 이상 정기적... 3 개쓰레기같은 앱임수업 신청해서 2시간걸리는 곳까지 땀 찔찔 흘려가며 갔는데 위치를 ... 4 별루보기에 좋아보여서 가입했는데 막상 들어가서 살펴보니까 별로라서 탈퇴하고 삭제할려... Name: comment, dtype: object . 3. &#53664;&#53360;&#54868; . 리뷰 제목+코멘트 중 명사 단어만 추출 . from nltk import word_tokenize from konlpy.tag import Mecab # 불용어 stop_words = [&#39;프립&#39;, &#39;구매&#39;, &#39;내역&#39;, &#39;삭제&#39;] def noun_extract(data, num): words = &#39; &#39;.join(data) # 리스트의 모든 value를 하나의 텍스트로 mecab = Mecab() ## 전체 품사 태깅 speech_pos = mecab.pos(words) ## 명사품사만 추출 ## 품사 태그 제외하고 단어만 추출 nouns = [n for n, tag in speech_pos # 명사 품사일 경우만 if tag in [&quot;NNG&quot;,&quot;NNP&quot;] # 불용어는 제외 and n not in stop_words #2글자 이상일 때만 and len(n)&gt;1] return nltk.Text(nouns).vocab().most_common(num) . frip_top50 = noun_extract(frip[&#39;comment&#39;], 50) frip_top50[:10] . [(&#39;활동&#39;, 42), (&#39;부탁&#39;, 41), (&#39;사람&#39;, 34), (&#39;날짜&#39;, 27), (&#39;지역&#39;, 26), (&#39;호스트&#39;, 25), (&#39;이용&#39;, 25), (&#39;프로그램&#39;, 25), (&#39;취미&#39;, 25), (&#39;추천&#39;, 25)] . 4. WordCloud &#44536;&#47532;&#44592; . 빈출 키워드 시각화 . from wordcloud import WordCloud, STOPWORDS import matplotlib.pyplot as plt def wordcloud(data, color, mask = None): # warnings.filterwarnings(&#39;ignore&#39;) # 워닝 메세지 무시 # if color == color_func_frip: try: wc=WordCloud( # 폰트 설정 font_path=&#39;/Library/Fonts/NanumBarunGothic.ttf&#39;, background_color=&#39;white&#39;, colormap= color, # 이미지 모양 설정 mask= mask, stopwords= [&#39;프립&#39;, &#39;구매&#39;, &#39;내역&#39;, &#39;삭제&#39;]).generate_from_frequencies(dict(data)) except: wc=WordCloud( # 폰트 설정 font_path=&#39;/Library/Fonts/NanumBarunGothic.ttf&#39;, background_color=&#39;white&#39;, color_func= color_func_frip, # 이미지 모양 설정 mask= mask, stopwords= [&#39;프립&#39;, &#39;구매&#39;, &#39;내역&#39;, &#39;삭제&#39;]).generate_from_frequencies(dict(data)) plt.figure(figsize=(30,30)) #이미지 사이즈 지정 plt.imshow(wc, # interpolation=&#39;lanczos&#39; interpolation=&#39;bilinear&#39; ) #이미지의 부드럽기 정도 plt.axis(&#39;off&#39;) #x y 축 숫자 제거 plt.show() # wc.to_file(f&#39;{data}.jpg&#39;) return wc . wordcloud(frip_top50, &#39;blues&#39;) . &lt;wordcloud.wordcloud.WordCloud at 0x7fec8e68c100&gt; . 4-1. Frip &#49884;&#44536;&#45768;&#52376; &#52972;&#47084; &#49444;&#51221; . https://www.w3schools.com/colors/colors_picker.asp 참고 . def color_func_frip(word, font_size, position,orientation,random_state=None, **kwargs): return(&quot;hsl({:d},{:d}%, {:d}%)&quot;. format(np.random.randint(211,212), np.random.randint(99,100), np.random.randint(31,85))) . 4-2. Frip &#47560;&#49828;&#53356; &#49373;&#49457; . from PIL import Image frip_mask = np.array(Image.open(&#39;/Users/choeinbeom/Downloads/프립.jpg&#39;)) . wc = wordcloud(frip_top50, color_func_frip, mask=frip_mask) # wc.to_file(&#39;blue_frip.jpg&#39;) . 5. &#44557;&#51221; / &#48512;&#51221; &#47532;&#48624; &#50892;&#46300;&#53364;&#46972;&#50864;&#46300; . 1~5점까지의 별점에서 3점을 기준으로 긍정/부정 리뷰를 나누고 각각 토큰화, 시각화 수행 . frip_pos = frip[frip[&#39;stars&#39;] &gt; 3] frip_neg = frip[frip[&#39;stars&#39;] &lt; 3] len(frip_pos), len(frip_neg) . (291, 60) . pos_noun = noun_extract(frip_pos[&#39;comment&#39;], 50) neg_noun = noun_extract(frip_neg[&#39;comment&#39;], 50) neg_noun[:10] . [(&#39;호스트&#39;, 17), (&#39;탈퇴&#39;, 17), (&#39;정보&#39;, 13), (&#39;결제&#39;, 12), (&#39;환불&#39;, 11), (&#39;고객&#39;, 11), (&#39;후기&#39;, 10), (&#39;신청&#39;, 10), (&#39;사진&#39;, 9), (&#39;취소&#39;, 9)] . pos_mask = np.array(Image.open(&#39;/Users/choeinbeom/Downloads/긍정.jpg&#39;)) neg_mask = np.array(Image.open(&#39;/Users/choeinbeom/Downloads/부정.jpg&#39;)) wordcloud(pos_noun, color = &#39;summer&#39;, mask=pos_mask) wordcloud(neg_noun, color = &#39;autumn&#39;, mask=neg_mask) . &lt;wordcloud.wordcloud.WordCloud at 0x7fec9db41a30&gt; .",
            "url": "https://onedayin21c.github.io/IBblog/bigquery/wordcloud/nlp/tokenize/nltk/konlpy/2021/08/15/%EC%95%B1%EC%8A%A4%ED%86%A0%EC%96%B4-%EB%A6%AC%EB%B7%B0-NLP.html",
            "relUrl": "/bigquery/wordcloud/nlp/tokenize/nltk/konlpy/2021/08/15/%EC%95%B1%EC%8A%A4%ED%86%A0%EC%96%B4-%EB%A6%AC%EB%B7%B0-NLP.html",
            "date": " • Aug 15, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "앱스토어 리뷰 크롤링",
            "content": "from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.remote.webelement import WebElement from selenium.webdriver import ActionChains import time from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC import pandas as pd import string import datetime from bs4 import BeautifulSoup import requests . import pandas as pd import pymysql . 1. &#45936;&#51060;&#53552; &#53356;&#47204;&#47553; . 1-1. &#46041;&#51201; &#54168;&#51060;&#51648; &#45936;&#51060;&#53552; &#48520;&#47084;&#50724;&#44592; (chromdriver &#54876;&#50857;) . chromedriver = &#39;/usr/local/bin/chromedriver&#39; driver = webdriver.Chrome(chromedriver) # 앱스토어 자란다 페이지 driver.get( &quot;https://apps.apple.com/kr/app/%EC%9E%90%EB%9E%80%EB%8B%A4/id1469857402#see-all/reviews&quot; ) # 동적 페이지의 데이터를 모두 불러오기 위해 스크롤을 가장 아래까지 내림 prev_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;) while True: # 스크롤을 화면 가장 아래로 내린다 driver.execute_script(&quot;window.scrollTo(0,document.body.scrollHeight)&quot;) # 페이지 로딩 대기 time.sleep(0.5) # 현재 문서 높이를 가져와서 저장 curr_height = driver.execute_script(&quot;return document.body.scrollHeight&quot;) if (curr_height == prev_height): break else: prev_height = driver.execute_script( &quot;return document.body.scrollHeight&quot;) curr_height . 1-2. &#44060;&#48324; &#47532;&#48624; &#48149;&#49828;&#51032; ID &#53356;&#47204;&#47553; . box=driver.find_elements_by_class_name(&#39;l-column--equal-height&#39;) box_id = [] for i in box: box_id.append(i.get_attribute(&#39;id&#39;)) print(box_id[:3]) print(&quot; n 리뷰 박스 개수 =&quot;, len(box_id),&#39;개&#39;) . [&#39;ember89&#39;, &#39;ember91&#39;, &#39;ember93&#39;] 리뷰 박스 개수 = 45 개 . 1-3. &#47532;&#48624; &#45936;&#51060;&#53552; &#53356;&#47204;&#47553; . 앱스토어의 리뷰 데이터는 (1) 코멘트의 길이가 길거나 혹은 (2) 개발자의 답변이 있을 경우, 개별 리뷰 박스의 &#39;더 보기&#39; 버튼을 클릭해 데이터를 추가로 불어와야 크롤링 가능 . driver.find_element_by_id(&#39;ember101&#39;).find_element_by_class_name(&#39;we-clamp&#39;).text . &#39;아이가 공부를 너무 하기 싫어해서 고민이였는데 샘들이 친구처럼 놀아주면서 하니까 학습 효과가 너무 좋네요^^ 자주 애용해야겠어요. 아들두 쌤 또 언제 오냐구 그러고… 일반 학습지보다 나은듯~. 만족합니다^^&#39; . stars = driver.find_elements_by_class_name(&#39;we-star-rating--large&#39;) # 별점 date = driver.find_elements_by_class_name(&#39;we-customer-review__date&#39;) # 작성일 user = driver.find_elements_by_class_name(&#39;we-customer-review__user&#39;) # 작성자 title = driver.find_elements_by_class_name(&#39;we-customer-review__title&#39;) # 제목 . review = [] for id in enumerate(box_id): # 데이터 로드 대기 # time.sleep(1) # 박스에 &#39;더 보기&#39; 버튼이 있을 경우 try: # &#39;더 보기&#39; 클릭 button = driver.find_element_by_css_selector( f&quot;#{id[1]} &gt; div.we-customer-review.lockup &gt; blockquote:nth-child(4) &gt; button&quot; ) button.click() time.sleep(0.2) review.append( driver.find_element_by_class_name( &#39;we-customer-review__body--modal&#39;).text) #리뷰 코멘트 # 박스 닫기 exit = driver.find_element_by_class_name(&#39;we-modal__close&#39;) exit.click() print(id, &#39;더 보기 클릭&#39;) except: review.append(driver.find_element_by_id(f&#39;{id[1]}&#39;). find_element_by_class_name(&#39;we-clamp&#39;).text) #리뷰 코멘트 print(id, &#39;pass&#39;) print(&#39; n 크롤링 완료&#39;) . (0, &#39;ember89&#39;) pass (1, &#39;ember91&#39;) pass (2, &#39;ember93&#39;) pass (3, &#39;ember95&#39;) 더 보기 클릭 (4, &#39;ember97&#39;) 더 보기 클릭 (5, &#39;ember99&#39;) 더 보기 클릭 (6, &#39;ember101&#39;) 더 보기 클릭 (7, &#39;ember103&#39;) 더 보기 클릭 (8, &#39;ember105&#39;) 더 보기 클릭 (9, &#39;ember107&#39;) 더 보기 클릭 (10, &#39;ember120&#39;) 더 보기 클릭 (11, &#39;ember122&#39;) 더 보기 클릭 (12, &#39;ember124&#39;) 더 보기 클릭 (13, &#39;ember126&#39;) 더 보기 클릭 (14, &#39;ember128&#39;) 더 보기 클릭 (15, &#39;ember130&#39;) 더 보기 클릭 (16, &#39;ember132&#39;) 더 보기 클릭 (17, &#39;ember134&#39;) 더 보기 클릭 (18, &#39;ember136&#39;) 더 보기 클릭 (19, &#39;ember138&#39;) 더 보기 클릭 (20, &#39;ember150&#39;) 더 보기 클릭 (21, &#39;ember152&#39;) 더 보기 클릭 (22, &#39;ember154&#39;) 더 보기 클릭 (23, &#39;ember156&#39;) 더 보기 클릭 (24, &#39;ember158&#39;) 더 보기 클릭 (25, &#39;ember160&#39;) 더 보기 클릭 (26, &#39;ember162&#39;) 더 보기 클릭 (27, &#39;ember164&#39;) 더 보기 클릭 (28, &#39;ember166&#39;) 더 보기 클릭 (29, &#39;ember168&#39;) 더 보기 클릭 (30, &#39;ember180&#39;) 더 보기 클릭 (31, &#39;ember182&#39;) 더 보기 클릭 (32, &#39;ember184&#39;) 더 보기 클릭 (33, &#39;ember186&#39;) 더 보기 클릭 (34, &#39;ember188&#39;) pass (35, &#39;ember190&#39;) 더 보기 클릭 (36, &#39;ember192&#39;) 더 보기 클릭 (37, &#39;ember194&#39;) pass (38, &#39;ember196&#39;) 더 보기 클릭 (39, &#39;ember198&#39;) 더 보기 클릭 (40, &#39;ember205&#39;) pass (41, &#39;ember207&#39;) 더 보기 클릭 (42, &#39;ember209&#39;) 더 보기 클릭 (43, &#39;ember211&#39;) pass (44, &#39;ember213&#39;) 더 보기 클릭 크롤링 완료 . 2. &#53356;&#47204;&#47553; &#45936;&#51060;&#53552; &#51204;&#52376;&#47532; . title_lst = [] for i in title: if i.text != &#39;개발자 답변&#39;: title_lst.append(i.text) user_lst = [] for i in user: user_lst.append(i.text) date_lst = [] for i in date: z = i.get_attribute(&#39;aria-label&#39;) date_lst.append( # str -&gt; datetime 변환 datetime.datetime.strptime( z.replace(&#39;년 &#39;, &#39;-&#39;).replace(&#39;월 &#39;, &#39;-&#39;).replace(&#39;일&#39;, &#39;&#39;), &quot;%Y-%m-%d&quot;)) stars_lst = [] for i in stars: stars_lst.append( # int로 변환 int(i.get_attribute(&#39;aria-label&#39;).split(&#39;/&#39;)[0]) ) len(title_lst), len(date_lst), len(stars_lst), len(user_lst) . (45, 45, 45, 45) . df = pd.DataFrame() df[&#39;app&#39;] = [&#39;자란다&#39; for i in range(len(title_lst))] df[&#39;title&#39;] = title_lst df[&#39;user&#39;] = user_lst df[&#39;date&#39;] = date_lst df[&#39;stars&#39;] = stars_lst df[&#39;comment&#39;] = review print(df.shape) print(df.dtypes) df.head() . (45, 6) app object title object user object date datetime64[ns] stars int64 comment object dtype: object . app title user date stars comment . 0 자란다 | 좋아요 | maum.c | 2019-10-31 | 5 | 원래 쓰고 있었는데 앱 나오니 훨씬 편하고 좋아요 나름 꽤 초창기부터 써왔는데 점점... | . 1 자란다 | 드디어 앱이 나왔군요~~! | 파랑땡땡구리 | 2019-07-13 | 5 | 항상 감사하고 있습니다. 우리 애들 자란다 선생님 너무 좋아해요. 계속 자란다 선생... | . 2 자란다 | 선생님이 너무좋았답니다. | terry11117 | 2020-03-26 | 5 | 다른 돌봄회사들보다 체계적이어서 감동받았어요. 우선 자란다 선생님의 선택의 폭이 넓... | . 3 자란다 | 아이들이 자란다 선생님을 너무 좋아해요~~ | ysmom23 | 2019-09-19 | 5 | 엄마는 힘들어서 못해주는 몸으로 놀아주기.. 자란쌤이 아이와 함께 놀아주니 아이가 ... | . 4 자란다 | 맞벌이 부부에게 큰 힘이 됩니다 | 별2개 | 2021-07-30 | 5 | 이런 리뷰를 잘 안쓰는데 자란다에게 고마운 마음을 표현하고자 끄적여봅니다^^ n n... | . 3. &#48709;&#53244;&#47532;&#47196; &#51204;&#49569; . 3-1. &#48709;&#53244;&#47532;&#47196; &#51204;&#49569; . from google.oauth2 import service_account import pandas_gbq . cd = service_account.Credentials.from_service_account_file( &#39;/Users/choeinbeom/Downloads/tidal-surf-302413-582aad3f1e46.json&#39;) project_id = &#39;tidal-surf-302413&#39; destination_table = &#39;test_jaranda.reviews&#39; df.to_gbq(destination_table,project_id,if_exists=&#39;append&#39;,credentials=cd) print(&#39;migration complete&#39;) . 1it [00:02, 2.76s/it] . migration complete . . 3-2. &#48709;&#53244;&#47532; &#45936;&#51060;&#53552; &#47196;&#46300; &#48143; &#54869;&#51064; . from google.cloud import bigquery . cd = service_account.Credentials.from_service_account_file( &#39;/Users/choeinbeom/Downloads/tidal-surf-302413-582aad3f1e46.json&#39;) client = bigquery.Client (project = &#39;tidal-surf-302413&#39; , credentials = cd) query = &#39;SELECT * FROM test_jaranda.reviews&#39; df_result = client.query(query).to_dataframe() print(df_result.shape) print(df_result.dtypes) df_result.head() . (339, 6) title object user object date datetime64[ns, UTC] stars int64 comment object app object dtype: object . title user date stars comment app . 0 회원탈퇴 | 구름바이러스 | 2019-12-10 00:00:00+00:00 | 5 | 회원탈퇴 어떻게 하나요 선생님 지원하려다 앱 따로있는거 모르고 가입했는데 | 자란다 | . 1 선생님들이 우수해요 | nikiiiiaaaasss | 2020-09-23 00:00:00+00:00 | 5 | 평균적으로 우수한 선생님이 많아요. 교사관리가 n잘 되고있는것 같아요 | 자란다 | . 2 좋아요 | maum.c | 2019-10-31 00:00:00+00:00 | 5 | 원래 쓰고 있었는데 앱 나오니 훨씬 편하고 좋아요 나름 꽤 초창기부터 써왔는데 점점... | 자란다 | . 3 덕분에 아이도 저도 잘 놀아요 | Ameri.cano | 2019-10-31 00:00:00+00:00 | 5 | 자란다 서비스를 쓴건 솔직히 아이를 위해서이기도 했지만, 저를 위해서 이기도 했어요... | 자란다 | . 4 자란다 앱 너무 편하네요 | 노수지 | 2019-10-31 00:00:00+00:00 | 5 | 예전에 웹으로 사용했었는데 정말 앱이 나와서 사용하기 편리해졌네요. 항상 느끼는거지... | 자란다 | . crong = df_result[df_result[&#39;app&#39;]==&#39;째깍악어&#39;] . newjrd = df_result[df_result[&#39;app&#39;]==&#39;자란다&#39;].sort_values(by = &#39;date&#39;, ascending=False) newjrd[newjrd[[&#39;title&#39;, &#39;user&#39;]].duplicated()] . title user date stars comment app . 40 선생님 관리가 제대로 안되는듯 | nkein82 | 2021-06-08 00:00:00+00:00 | 5 | 예약하고 결재까지 다했는데 뜬금없이 그날은 안된다면서 하루전에 일방적으로 취소해달라... | 자란다 | . 46 신청서작성시 단계가 안 넘어가요!!! | 사용하고싶어요! | 2021-05-19 00:00:00+00:00 | 1 | 너무 화가나려하네요! 방문일정 등록하려는데 방문 종류 선택할때도 터치가 안먹는건지 ... | 자란다 | . 44 워킹맘은 절대 쓰지 마세요 | VIP멤버펑 | 2021-03-31 00:00:00+00:00 | 1 | 일부러 추천율 100프로인 잘자란 선생님 골라서 (돌봄 시간도 100시간 넘는) 신... | 자란다 | . 33 너무 자주 어플이 먹통이 되어요ㅠㅠ | 11166554443388 | 2021-03-17 00:00:00+00:00 | 5 | 자주 수업 리스트도 뜨지 않고 어플이 부팅되는데 너무 오래 걸려요ㅠㅠ | 자란다 | . 47 회원탈퇴 기능이 없네요 | hhhhhhhh28472919 | 2021-01-22 00:00:00+00:00 | 1 | 너무 찜찜하고 신고하려다 말았는데 회원 탈퇴 기능 만들어주세요 n이런걸 리뷰에 써야... | 자란다 | . 24 ㅇㅇㅇㅇ | Icefall입니다 | 2020-11-27 00:00:00+00:00 | 5 | 카카오페이 등록 안됨 앱 느리고 오류 많음 ㅠ n선생님 보다가 뒤로가기 안뎀 | 자란다 | . 36 오늘 자란다의 일방적 “신청취소” 후 느낀점 | 사노리 | 2020-09-25 00:00:00+00:00 | 5 | 초1아들 영어 첫공부에 대한 블로그 추천글이 많아 학원보내기 불안한 시기에 적절히 ... | 자란다 | . 52 아이폰에서 최근에 계속 로딩만 뜨고 넘어가지를 않네요 ㅠㅠ 저만 그런건가요 | 저만안되나요 | 2020-08-04 00:00:00+00:00 | 2 | 앱 실행하면 첫 화면에서 로딩 아이콘만 뜨고 넘어가지를 못하네요. 잠깐 그런가보다 ... | 자란다 | . 32 탈퇴방법 | ㅜㅏ나니미 | 2020-06-26 00:00:00+00:00 | 5 | 선생님 가입하려했는데 실수로 부모님으로 가입해서 다시 가입하려니까 이미 핸드폰번호가... | 자란다 | . 8 좋은 선생님 추천 | 해해해햇 | 2020-01-27 00:00:00+00:00 | 5 | 좋은 선생님이 너무 좋아요 | 자란다 | . 0 회원탈퇴 | 구름바이러스 | 2019-12-10 00:00:00+00:00 | 5 | 회원탈퇴 어떻게 하나요 선생님 지원하려다 앱 따로있는거 모르고 가입했는데 | 자란다 | . 54 회원탈퇴 | 마사룰루랄ㄹ라 | 2019-10-31 00:00:00+00:00 | 4 | 앱과 웹 모두 뒤져보아도 회원탈퇴 기능이 없네요. 업데이트 바랍니다. | 자란다 | .",
            "url": "https://onedayin21c.github.io/IBblog/selenium/jupyter/bigquery/2021/08/13/%EC%95%B1%EC%8A%A4%ED%86%A0%EC%96%B4-%EB%A6%AC%EB%B7%B0-%ED%81%AC%EB%A1%A4%EB%A7%81-(3).html",
            "relUrl": "/selenium/jupyter/bigquery/2021/08/13/%EC%95%B1%EC%8A%A4%ED%86%A0%EC%96%B4-%EB%A6%AC%EB%B7%B0-%ED%81%AC%EB%A1%A4%EB%A7%81-(3).html",
            "date": " • Aug 13, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://onedayin21c.github.io/IBblog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://onedayin21c.github.io/IBblog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://onedayin21c.github.io/IBblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://onedayin21c.github.io/IBblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}